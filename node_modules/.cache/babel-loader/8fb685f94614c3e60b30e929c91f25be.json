{"ast":null,"code":"var _jsxFileName = \"/Users/GCentinaje/Desktop/MyClicky_Game/src/App.js\";\nimport React from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport PrincessCard from \"./components/PrincessCard\";\nimport princess from \"./components/princess.json\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      princess,\n      clickedImage: [],\n      highScore: 0,\n      currentScore: 0\n    };\n  }\n\n  shuffle() {\n    this.setState({\n      princess: princess.sort(() => Math.random() - 0.5)\n    });\n  }\n\n  isClicked(id) {\n    if (!this.state.clickedImage.includes(id)) {\n      this.setState({\n        currentScore: this.state.currentScore + 1,\n        highScore: this.state.currentScore + 1 > this.state.highScore ? this.state.currentScore + 1 : this.state.highScore,\n        clickedImage: [...this.state.clickedImage, id]\n      });\n    } else {\n      alert(\"You guessed wrong! Start again\");\n      this.setState({\n        currentScore: 0,\n        clickedImage: []\n      });\n    }\n\n    this.shuffle();\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Clicky Game\"), React.createElement(\"p\", {\n      className: \"instructions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Click on the images to get the highest score without clicking on the same image twice!\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"High Score: \", this.state.highScore, \" | Current Score: \", this.state.currentScore)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, princess.map(f => React.createElement(PrincessCard, {\n      image: f.image,\n      id: f.id,\n      isClicked: () => this.isClicked(f.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/GCentinaje/Desktop/MyClicky_Game/src/App.js"],"names":["React","Wrapper","PrincessCard","princess","App","Component","state","clickedImage","highScore","currentScore","shuffle","setState","sort","Math","random","isClicked","id","includes","alert","render","map","f","image"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNH,MAAAA,QADM;AAENI,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,SAAS,EAAE,CAHL;AAINC,MAAAA,YAAY,EAAE;AAJR,KADwB;AAAA;;AAQhCC,EAAAA,OAAO,GAAG;AACR,SAAKC,QAAL,CAAc;AAAER,MAAAA,QAAQ,EAAEA,QAAQ,CAACS,IAAT,CAAc,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAApC;AAAZ,KAAd;AACD;;AAEDC,EAAAA,SAAS,CAACC,EAAD,EAAK;AACZ,QAAI,CAAC,KAAKV,KAAL,CAAWC,YAAX,CAAwBU,QAAxB,CAAiCD,EAAjC,CAAL,EAA2C;AACzC,WAAKL,QAAL,CAAc;AACZF,QAAAA,YAAY,EAAE,KAAKH,KAAL,CAAWG,YAAX,GAA0B,CAD5B;AAEZD,QAAAA,SAAS,EACP,KAAKF,KAAL,CAAWG,YAAX,GAA0B,CAA1B,GAA8B,KAAKH,KAAL,CAAWE,SAAzC,GACI,KAAKF,KAAL,CAAWG,YAAX,GAA0B,CAD9B,GAEI,KAAKH,KAAL,CAAWE,SALL;AAMZD,QAAAA,YAAY,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,YAAf,EAA6BS,EAA7B;AANF,OAAd;AAQD,KATD,MASO;AACLE,MAAAA,KAAK,CAAC,gCAAD,CAAL;AACA,WAAKP,QAAL,CAAc;AACZF,QAAAA,YAAY,EAAE,CADF;AAEZF,QAAAA,YAAY,EAAE;AAFF,OAAd;AAID;;AACD,SAAKG,OAAL;AACD;;AAEDS,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAG,MAAA,SAAS,EAAG,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGAFF,EAKE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgB,KAAKb,KAAL,CAAWE,SAA3B,wBAAwD,KAAKF,KAAL,CAAWG,YAAnE,CADF,CALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,QAAQ,CAACiB,GAAT,CAAaC,CAAC,IACb,oBAAC,YAAD;AACE,MAAA,KAAK,EAAEA,CAAC,CAACC,KADX;AAEE,MAAA,EAAE,EAAED,CAAC,CAACL,EAFR;AAGE,MAAA,SAAS,EAAE,MAAM,KAAKD,SAAL,CAAeM,CAAC,CAACL,EAAjB,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF,CARF,CADF;AAsBD;;AAvD+B;;AA0DlC,eAAeZ,GAAf","sourcesContent":["import React from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport PrincessCard from \"./components/PrincessCard\";\nimport princess from \"./components/princess.json\";\n\nclass App extends React.Component {\n  state = {\n    princess,\n    clickedImage: [],\n    highScore: 0,\n    currentScore: 0\n  };\n\n  shuffle() {\n    this.setState({ princess: princess.sort(() => Math.random() - 0.5) });\n  }\n\n  isClicked(id) {\n    if (!this.state.clickedImage.includes(id)) {\n      this.setState({\n        currentScore: this.state.currentScore + 1,\n        highScore:\n          this.state.currentScore + 1 > this.state.highScore\n            ? this.state.currentScore + 1\n            : this.state.highScore,\n        clickedImage: [...this.state.clickedImage, id]\n      });\n    } else {\n      alert(\"You guessed wrong! Start again\");\n      this.setState({\n        currentScore: 0,\n        clickedImage: []\n      });\n    }\n    this.shuffle();\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <h1>Clicky Game</h1>\n        <p className = \"instructions\">\n          Click on the images to get the highest score without clicking on the same image twice!\n        </p>\n        <div className=\"container\">\n          <p>High Score: {this.state.highScore} | Current Score: {this.state.currentScore}</p>\n        </div>\n        <div>\n          <div className=\"row\">\n            {princess.map(f => (\n              <PrincessCard\n                image={f.image}\n                id={f.id}\n                isClicked={() => this.isClicked(f.id)}\n              />\n            ))}\n          </div>\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}